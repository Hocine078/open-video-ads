#summary Where to Begin With RTMP Ad Delivery
#sidebar TableOfContents

This guide walks through how to setup a simple example streaming a "pre-roll" ad and a show stream using RTMP on a Flash Media Server (FMS), ad serving via [http://www.openx.org OpenX] and video play using [http://www.flowplayer.org Flowplayer] or Longtail Video's [http://www.longtailvideo.com JW Player].

It is recommended that you systematically walk through the following steps before proceeding into the detailed documentation.

If you wish to use HTTP based ad and show delivery, please read [GettingStartedHTTP here].

You can mix HTTP and RTMP based ad and show delivery, but that's a story for later in the documentation.

The following diagram illustrates a typical setup for RTMP based ad and show delivery:

<img src="http://static.bouncingminds.com/images/open-video-ads/gettingstartedrtmp.png" width="700" border="0" />

Within your webpage sits a Video Player (JW Player or Flowplayer). The Video Player uses a plugin known as the Open Ad Streamer to control the way advertising is displayed within the player. The specifics on which ad to play and when given a set of show streams is defined in a configuration file that is loaded by the Open Ad Streamer. The ad specification is known as an "Ad Schedule".

Given an "ad schedule", the Open Ad Streamer determines which ad types are required and how they are to be sequenced against a set of show streams. Ad types may be linear video ads or non-linear (e.g. overlay ads) - each type can have companion ads attached.

To obtain the appropriate ads to play the Open Ad Streamer makes an Ad Request to a VAST enabled Advertising Server - in our demonstration case, OpenX. The Ad Server returns the ads to play as a Video Ad Serving Template (VAST) - this is an XML based definition of the ads matching the ad request made by the Open Ad Streamer.

The Open Ad Streamer parses the VAST XML data to sequence a list of ads and streams to play in the Video Player. The Ad Streamer loads this "playlist" into the Video Player using the playlist API provided by the Video Player.

Once loaded, the Open Ad Streamer tells the Video Player to play the playlist, tracking time as each element of the playlist streams. At various points during the playback, tracking events are fired back to the Ad Server to allow ad metrics to be collated.

To play the streams the Open Ad Streamer relies on the RTMP facilities of the Video Player. In Flowplayer's case, a separate RTMP plugin is loaded by the Video Player and that plugin takes to the RTMP streaming servers to stream the show and ad content. The Show and Ad content may be housed on completely different RTMP servers/addresses.

For JW Player, RTMP support is built into the base player.

To implement this type of setup:

  # Overview
     * Familiarise yourself with the key [KeyTerminology terminology and concepts]
     * Review the material on this site - specifically the [http://www.openvideoads.org/plugins/flowplayer/openvideoads/openadstreamer/latest/examples/index.html Flowplayer examples] or the [http://www.openvideoads.org/plugins/longtail/jwplayer/openvideoads/latest/examples/index.html JW Player examples] to get a handle on all of the various configuration options available
  # Get a simple video playing 
     * Start simple - create a test page that will request a pre-roll video ad from the Open Video Ads demo [http://openx.openvideoads.org/openx OpenX Ad Server] before playing the ad and the show streams off the same Content Delivery Network (CDN) used by the examples on this site. To complete this task follow [GettingStartedCreateRTMPTestPageFlowplayer these steps for Flowplayer] or [GettingStartedCreateRTMPTestPageJWPlayer these for JW Player]
  # Make your video ads available for streaming
     * Before you proceed any further, make sure that you get a few video ads and programme streams up and running on an RTMP streaming server. You can either use:
        * a local install of an Flash Media Server (FMS), Wowsa server, or potentially a Red5 server       
        * a Content Delivery Network (CDN) such as Limelight, Akamai, SimpleCDN or Influxis. 
     * If you need a few example linear video ads, you can find several [TestAds here]
  # Install the Ad platform   
     * Install a VAST compliant Ad Server. In this example we are using the [http://www.openx.org OpenX Ad Platform] and the openXVideoAds plugin. Follow these [InstallingOpenXServerVideoPlugin instructions] to setup an OpenX environment.
  # Configure the Ad platform  
     * Now that you have your ad platform installed, configure some video ads on it. In our environment where OpenX is running with the Video Ads plugin, video ad banners must be setup and configured against a series of ad "zones".  Follow these [SettingUpYourFirstOpenXCampaign steps] to complete this activity or follow the documentation on the OpenX site [https://developer.openx.org/wiki/display/DOCS/OpenX+Video+Plugin+Beta+--+Documentation here].
  # Setup crossdomain.xml 
     * Before you can connect the Open Ad Streamer to your new OpenX instance, you need to ensure that you have an appropriate "crossdomain.xml" file configured in the doc root of the webserver on the box running the OpenX Ad Server. If you don't do this, when the OpenX Ad Streamer makes a request to the OpenX Ad Server to obtain the VAST data, a security violation will be thrown within Flash and the request will be denied. Here's an example [ExampleCrossdomainXML crossdomain.xml] file that you can use.
  # Configure your player to call the Ad platform
     * You're almost there. Change the test page that you originally created so that it now points to your OpenX Ad Server instance and the linear video ad "zone" that you created. Follow these [GettingStartedChangeTestPage instructions] to complete this task.