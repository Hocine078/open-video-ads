An _Ad Schedule_ is a central construct within the VAST AS3 Framework and the Flowplayer Open Ad Server as a result. It is a series of Ad Slots that represent a single Video Ad instance to be played when the Video Player serves the streams.

An Ad Schedule is declared through the "schedule" configuration parameter within the "ads" configuration grouping. The declaration below is from our example 03:

{{{
                 "schedule": [
                      {
                           "zone": "5",
                           "position": "pre-roll"
                      },
                      {
                           "zone": "12",
                           "position": "bottom",
                           "width": 600,
                           "height": 40,
                           "startTime": "00:00:05",
                           "duration": "15"
                      }
                  ],
}}}

In this declaration, 2 _Ad Slots_ are declared - the first is a pre-roll ad identified as zone "5" in our OpenX instance, the second is a non-linear ad identified as Zone "12" to OpenX. The presence of "zones" allows each ad slot to be differentiated to the Ad Server.

When the framework (the `VASTController`) is initialised, the _Ad Schedule_ declared in the configuration data is transposed into an object model that is internally used to represent the Ad Schedule. The object model is headed by a class termed `AdSchedule` and it contains 1 to many `AdSlots`.

On initialisation the Ad Schedule is just an abstract definition of the Ads that are to be played by the Video Player.

Once the VAST Framework makes a call to an Ad Server and receives the corresponding VAST data back, the Ad Schedule is turned into an actual representation of the Video Ads to be played in each _Ad Slot_.

Consider our example 03. When the VAST Framework is initialised, the `AdSchedule` object model exists as illustrated below:

<img src="http://static.bouncingminds.com/images/open-video-ads/adschedule-model.png" border="0" height="340">
<br/>
<br/>
_*Figure 2: The Basic AdSchedule*_
<br/>

Following the load of the VAST data however, the object model expands to become:

<img src="http://static.bouncingminds.com/images/open-video-ads/adschedule-model-with-ads.png" border="0" height="340">
<br/>
<br/>
_*Figure 3: The Populated AdSchedule*_


For a detailed explanation of what happens when an Ad Server call is made and a VAST response is parsed by the framework, read the section further on in this guide entitled "Requesting a Video Ad Serving Template (VAST) from the Ad Server".