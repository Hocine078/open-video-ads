#summary How the JW Player Ad Streamer Works
#sidebar TableOfContents

Ad scheduling is a skilled task. The successful deployment of an effective video advertising solution requires an
efficient Ad Server that manages the task of initiating, running and reporting on a video advertising campaign 
while the video player sequences and plays back the video ads identified by the Ad Server.

===The Pieces of the Puzzle===

The following diagram illustrates the end-to-end video advertising solution using the JW Player Open Ad Streamer:

<img src="http://static.bouncingminds.com/images/open-video-ads/jw-howit-works-figure1.png" height="400" border="0" />

To deploy the solution you will need to run:

  # [http://www.longtailvideo.com Longtail Video's JW Player] 4.5 (or later) (JW Player is Open Source)
  # A VAST Complaint Ad Server to deliver video ad definitions to it to schedule and playback via the Longtail Video JW Player. The project currently supports [http://www.openx.org OpenX] ( [InstallingOpenXServerVideoPlugin Installation instructions]). OpenX is the leading Open Source ad solution on the market today. Other Ad Servers can be used if they are VAST compliant. Support for several others is now in development.
  # The Open Video Ads [http://open-video-ads.googlecode.com/files/openvideoads.jwplayer.openadstreamer.bin.tar.gz Open Ad Streamer] plugin for JW Player. This plugin is an Actionscript 3 Flash SWF that is loaded by JW Player at runtime to facilitate the scheduling and playback of video advertising against a set of show streams
  # A streaming server to host the video ads that you are to serve. This may be either a HTTP pseudo-streaming enabled web server (such as [http://www.lighttpd.net Lighttpd] with the H.264 module installed) or an RTMP server such as Adobe's [http://www.adobe.com/products/flashmediaserver Flash Media Server], or [http://www.wowzamedia.com Wowsa]. You can run this server yourself or via a hosted CDN service such as [http://www.influxis.com Influxis], [http://www.simplecdn.com SimpleCDN], [http://www.akamai.com Akamai], [http://www.limelightnetworks.com Limelight] or the like.

For a detailed description of the environment that we have setup to run our examples, please read this [AboutOurDemoEnvironment guide].

===How it all works together===

[http://static.openvideoads.org/examples/openadstreamer/jwplayer/examples/http-example02a.html Example 2] is a good illustration of how the technology works.

[http://static.openvideoads.org/examples/openadstreamer/jwplayer/examples/http-example02a.html Example 2] plays a pre-roll ad before the main show stream.

To do this, a web page is constructed that has the standard JW Player flash object code:

{{{
<object id="ply" width="450" height="300" type="application/x-shockwave-flash" name="ply" data="../dist/4.5.swf">
  <param name="allowfullscreen" value="true"/>
  <param name="allowscriptaccess" value="always"/>
  <param name="flashvars" value="height=300&width=450&plugins=../dist/OpenAdStreamer.swf&config=config/http02a.xml"/>
</object>
}}}

Two important "flashvars" are passed into JW Player when the player instantiates:

  # A reference to the Open Ad Streamer flash SWF file (OpenAdStreamer.swf)
  # A reference to an file that contains the relevant configuration data for the Open Ad Streamer so that it knows how to configure itself for the streams to be played by JW Player ([http://static.openvideoads.org/examples/openadstreamer/jwplayer/examples/config/http02a.xml http02a.xml])

===Instructing the Open Ad Streamer on "How To Schedule and Play"===

X