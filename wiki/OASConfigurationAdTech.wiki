#summary Specific configuration settings to support the AdTech Ad Server
#sidebar TableOfContents

The Open Ad Streamer (version 0.3.0 or greater) allows any type of ad request to be easily integrated into the framework.

[http://www.adtech.de AdTech] Ad Server requests are supported 'out of the box'. 

This guide steps through the different configuration approaches that may be taken to integrate an [http://www.adtech.de AdTech] request.

===The Basics===

The configuration example below illustrates a simple AdTech request configuration:

{{{
flowplayer("a.player614x345", "../dist/flowplayer-3.1.4.swf", {
    plugins: {
        openAdStreamer: {
            url: '../dist/OpenAdStreamer.swf',

            "shows": {
                "baseURL": "http://streaming.openvideoads.org/shows",
                "streams": [
                    {
                        "file":"the-black-hole.mp4",
                        "duration":"00:00:20"
                    }
                ]
            },

            "ads": {
              "displayCompanions": true,
              "restoreCompanions": false,
              "companions": [
                   { "id":"companion-160x600", "width":"160", "height":"600" },
                   { "id":"companion-300x250", "width":"300", "height":"250" }
              ],
              "servers": [
                   {
                      "type": "AdTech",
                      "apiAddress": "http://de.at.atwola.com/?adrawdata/3.0/515.1",
                   }
              ],
              "schedule": [
                   {
                      "zone": "2189418/0/1725", // composed of placement/page-id/size-id
                      "position": "pre-roll"
                   }
              ]
            },

            "debug": {
              "levels": "fatal",
              "debugger": "firebug"
            }
        }
    }
});
}}}

In this example 1 ad slot is declared - a pre-roll ad. 

To obtain the pre-roll ad, a single ad server is declared - one of type "AdTech". The `type` identifies the ad server type to the Open Ad Streamer. Several pre-defined ad server types are currently supported:

  * OpenX
  * AdTech
  * Direct

After the type declaration, the address for the server is specified as `http://de.at.atwola.com/?adrawdata/3.0/515.1`

In this instance, to identify the type of ad to be served by AdTech, a `zone` is declared. The zone is defined as a string created by appending three key AdTech concepts together. They are:

  * A placement ID: For instance '2189418'  which is the AdTech unique identifier for an Ad placement
  * A page ID: e.g. '0' - this parameter is not in use at the moment
  * Size ID: e.g. '1725' - the size ID identifies a banner of a specific size which prevents serving the wrong size being served for a specific placement

Taking these three components in our example, we get a zone ID `2189418/0/1725`

====Constructing an AdTech Request====

When the Open Ad Server reaches a point where it needs to make a request to an ad server to get the ad asset, it constructs the ad server request URL from a template that is pre-defined in the framework for the declared ad server `type`.

For AdTech, the default request URL template appears as follows:

{{{
__api-address__/__zone__/__nondynamic__;
alias=__alias____aliaspostfix__;key=__key__;__key-value__;
__cookie-name__=__cookie-value__;
grp=__group__;misc=__random-number__
}}}

A `request template` is basically a string pattern that needs to be populated by the Open Ad Streamer when making a request to an ad server. For each template, a set of default values are also specified for the ad server type so that with the minimal configuration, a successful ad server request can be constructed.

Using this template and our example, the request to AdTech results as follows:

{{{
http://de.at.atwola.com/?adrawdata/3.0/515.1/
2188757/0/1728/noperf=1;cc=2;header=yes;cookie=yes;
adct=204;alias=;key=key1+key2;;=;grp=[group];misc=R0.1974387434311211
}}}

The resulting URL was constructed because:

  * `__api-address__` was replaced with the "apiAddress" setting `http://de.at.atwola.com/?adrawdata/3.0/515.1`
  * `__zone__` was replaced with the Ad Slot "zone" setting `2188757/0/1728`

In addition, several default values were used (because no specific ones were declared in the example configuration)

  * `__nondynamic__` was replaced with `noperf=1;cc=2;header=yes;cookie=yes;adct=204`
  * `__alias__` was replaced with "" (nothing)
  * `__key__` was replaced with "key1+key2"
  * `__misc__` was replaced with a random number (`__random-number__` is a reserved word that tells the OAS to generate a random number string and place it in that position

This all sounds quite complicated but it's hidden behind the scene.

If you need more flexibility around the way the AdTech URL is declared in an OAS configuration, three further configuration options are available to you:

  # Specifying URLs directly
  # Overriding the default AdTech request template
  # Overriding the standard template field values with your own settings

===Calling AdTech Directly===

The following example illustrates how to cut and paste AdTech URLs directly into an OAS configuration so that they are called without being modified:

{{{
flowplayer("a.example", "../dist/flowplayer-3.1.4.swf", {
    plugins: {
        controls: {
            autoHide: "always"
        },

        openAdStreamer: {
            url: '../dist/OpenAdStreamer.swf',

            "debug": {
                "debugger": "firebug",
                "levels": "fatal"
            },

            "ads": {
                "pauseOnClickThrough": true,
                "schedule": [
                    {
                       "position": "pre-roll",
                       "server": {
                           "type": "direct",
                           "apiAddress": "http://de.at.atwola.com/?adrawdata/3.0/515.1/
                                         2188758/0/1725/noperf=1;cc=2;header=yes;alias=myalias;
                                         cookie=yes;adct=204;key=key1+key2;grp=[group];
                                         misc=__random-number__"
                       }
                    }
                ]
             }
         }
     }
});
}}}

_note: In this example the URL is broken over several lines - don't break the URL over multiple lines in your actual configuration_

You will notice a couple of things about this example configuration:

  * The ad server type is specified as `direct`
  * The `apiAddress` is the fully formed AdTech URL

By specifying `direct` as the ad server type, the Open Ad Streamer simply uses the `apiAddress` as the URL to call - no templates or default values are applied.

Another difference with this configuration over the previous example is that the ad server settings are defined at the Ad Slot level. It is possible to specify precisely what ad server to call per Ad Slot. In this case, we've instructed the OAS to call the AdTech URL directly.

In our example, you will have noticed that no "zone" is declared for the "pre-roll" ad slot. When a "direct" ad call is to be made, the "zone" definition is no longer required. 

===Overriding the Default Request Template===

Very complex ad server configurations can be supported by the Open Ad Streamer.

The default request template can be overridden to allow any new URL structure to be declared.

The following example illustrates how this is done:

{{{
flowplayer("a.player614x345", "../dist/flowplayer-3.1.4.swf", {
    plugins: {
        rtmp: {
            url: "../dist/flowplayer.rtmp-3.1.3.swf"
        },
        rtmpInstream: {
            url: "../dist/flowplayer.rtmp-3.1.3.swf"
        },
        openAdStreamer: {
            url: '../dist/OpenAdStreamer.swf',

            "shows": {
                "baseURL": "http://streaming.openvideoads.org/shows",
                "streams": [
                    {
                        "file":"the-black-hole.mp4",
                        "duration":"00:00:20"
                    }
                ]
            },

            "ads": {
              "displayCompanions": true,
              "restoreCompanions": false,
              "companions": [
                   { "id":"companion-160x600", "width":"160", "height":"600" },
                   { "id":"companion-300x250", "width":"300", "height":"250" }
              ],
              "servers": [
                   {
                      "type": "AdTech",
                      "apiAddress": "http://de.at.atwola.com/?adrawdata/3.0/515.1",
                      "requestTemplate": "__api-address__/__zone__/__nondynamic__;
                                          alias=__alias____aliaspostfix__;key=__key__;
                                          __key-value__;__cookie-name__=__cookie-value__;
                                          grp=__group__;misc=__random-number__",
                      "oneAdPerRequest": true,
                      "customProperties": {
                                          "nondynamic": "noperf=1;cc=2;header=yes;cookie=yes;adct=204",
                                          "alias": "", 
                                          "aliaspostfix": "", 
                                          "key": "key1+key2", 
                                          "key-value": "", 
                                          "cookie-name": "", 
                                          "cookie-value": "", 
                                          "group": "23" 
                      }
                   }
              ],
              "schedule": [
                   {
                      "zone": "2189418/0/1725", // composed of placement/page-id/size-id
                      "position": "pre-roll"
                   },
                   {
                      "zone": "2188757/0/1728",
                      "startTime": "00:00:03",
                      "duration": "10",
                      "position": "reserved-bottom-center-w450px-h50px-transparent-0m",
                      "server": {
                         "customProperties": {
                                  "key": "male+teenager"
                         }
                      }
                   },
                   {
                     "zone": "2189418/0/1725",
                     "position": "post-roll"
                   }
              ]
            },

            "debug": {
              "levels": "fatal",
              "debugger": "firebug"
            }
        }
    }
});
}}}

There are two important configuration options to identify in the example above. These options allow you to override the default request template used by the AdTech ad request type:

  # `requestTemplate`
  # `customProperties` 

The "requestTemplate" option can be used to specify a new template.

Patterns to be replaced in a template are pre and post-fixed with `__` (double underscore). For example, you will notice that the "apiAddress" field is described as `__apiAddress__` and the "zone" field is `__zone__`

There are only two reserved patterns used at present:

  # `__apiAddress__`
  # `__zone__`

All other patterns are custom fields that are specified using the second configuration option - "customProperties".

If a field appears as `__field-name__` in the request template then it is referenced as "field-name": "value" in the "customProperties" option.

For example, if we wanted to replace the default AdTech URL template with something that takes the form:

       http://myadtechaddress/zone/myparam1/myparam2

we would specify the following:

{{{
    "servers": [
         {
              "type": "AdTech",
              "apiAddress": "http://myadtechaddress",
              "requestTemplate": "__api-address__/__zone__/__param1__/__param2__",
              "customProperties": {
                   "param1": "myparam1",
                   "param2": "myparam2"
              }
         }
    ]
}}}

===Overriding the Default Template Field Values===

The default request template for AdTech has the following customProperties set as default values. If they are not overridden in the OAS config, then these values will be used to construct the default request:

{{{
    "customProperties": {
          "nondynamic": "noperf=1;cc=2;header=yes;cookie=yes;adct=204",
          "alias": "", 
          "aliaspostfix": "", 
          "key": "key1+key2", 
          "key-value": "", 
          "cookie-name": "", 
          "cookie-value": "", 
          "group": "[group]",
          "misc": "random-number" 
    }
}}}

You will notice that most fields have no value set.

One field "misc" has a special reserved-term - "random-number"

If `random-number` is used as the value in a custom property the OAS will replace the value with a randomly generated number. If the term is used in the form `__random-number__` in the request URL template, it will be directly replaced with a random number when the request is formed.

Custom properties can be specified at either a general Ad Server level or at a specific Ad Slot level.

The following example illustrates how to do this:

{{{
     "ads": {
            "servers": [
                  {
                       "type": "AdTech",
                       "apiAddress": "http://de.at.atwola.com/?adrawdata/3.0/515.1",
                       "customProperties": {
                                "nondynamic": "noperf=1;cc=2;header=yes;cookie=yes;adct=204",
                                "alias": "", 
                                "aliaspostfix": "", 
                                "key": "key1+key2", 
                                "key-value": "", 
                                "cookie-name": "", 
                                "cookie-value": "", 
                                "group": "23" 
                       }
                  }
            ],
            "schedule": [
                  {
                       "zone": "2188757/0/1728",
                       "server": {
                           "customProperties": {
                                  "key": "male+teenager"
                           }
                       }
                  }
           ]
}}}