#summary Specific configuration settings to support the AdTech Ad Server
#sidebar TableOfContents

The Open Ad Streamer supports a very flexible configuration approach to the definition of requests that are to be made to different types of video ad server.

The OAS supports [http://www.adtech.de AdTech] 'out of the box'. This guide walks through the different configuration approaches that may be taken to integrate an [http://www.adtech.de AdTech] request.

===The Basics===

The configuration example below illustrates the most straight forward configuration to support a call to an [http://www.adtech.de AdTech Ad Server]:

{{{
flowplayer("a.player614x345", "../dist/flowplayer-3.1.4.swf", {
    plugins: {
        openAdStreamer: {
            url: '../dist/OpenAdStreamer.swf',

            "shows": {
                "baseURL": "http://streaming.openvideoads.org/shows",
                "streams": [
                    {
                        "file":"the-black-hole.mp4",
                        "duration":"00:00:20"
                    }
                ]
            },

            "ads": {
              "displayCompanions": true,
              "restoreCompanions": false,
              "companions": [
                   { "id":"companion-160x600", "width":"160", "height":"600" },
                   { "id":"companion-300x250", "width":"300", "height":"250" }
              ],
              "servers": [
                   {
                      "type": "AdTech",
                      "apiAddress": "http://de.at.atwola.com/?adrawdata/3.0/515.1",
                   }
              ],
              "schedule": [
                   {
                      "zone": "2189418/0/1725", // composed of placement/page-id/size-id
                      "position": "pre-roll"
                   }
              ]
            },

            "debug": {
              "levels": "fatal",
              "debugger": "firebug"
            }
        }
    }
});
}}}

In this example, 1 ad slot is declared - a pre-roll ad. 

To obtain the pre-roll ad, a single ad server is declared - one of type "AdTech". The `type` identifies the ad server type to the Open Ad Streamer. Several pre-defined ad server types are currently supported:

  * OpenX
  * AdTech
  * Direct

After the type declaration, the address for the server is specified as `http://de.at.atwola.com/?adrawdata/3.0/515.1`

In this instance, to identify the type of ad to be served by AdTech, a `zone` is declared of components that describe:

  * The ad placement position on the page
  * The page-id 
  * The size-id for the ad

In our case, that `zone` is declared as `2189418/0/1725`

When the Open Ad Server reaches a point where it needs to make a request to an ad server to get the ad asset, it constructs the ad server request URL from a template that is pre-defined for the declared ad server `type`.

For AdTech, the default request URL template appears as follows:

{{{
__api-address__/__zone__/__nondynamic__;
alias=__alias____aliaspostfix__;key=__key__;__key-value__;
__cookie-name__=__cookie-value__;
grp=__group__;misc=__random-number__
}}}

A `request template` is basically a string pattern that needs to be populated by the Open Ad Streamer when making a request to an ad server. For each template, a set of default values are also specified for the ad server type so that with the minimal configuration, a successful ad server request can be made.

Using this template and our example, the request to AdTech will be formulated as follows:

{{{
http://de.at.atwola.com/?adrawdata/3.0/515.1/
2188757/0/1728/noperf=1;cc=2;header=yes;cookie=yes;
adct=204;alias=;key=key1+key2;;=;grp=[group];misc=R0.1974387434311211
}}}

The resulting URL was constructed because:

  * `__api-address__` was replaced with the "apiAddress" setting `http://de.at.atwola.com/?adrawdata/3.0/515.1`
  * `__zone__` was replaced with the Ad Slot "zone" setting `2188757/0/1728`

In addition, several default values were used (because no specific ones were declared in the example configuration)

  * `__nondynamic__` was replaced with `noperf=1;cc=2;header=yes;cookie=yes;adct=204`
  * `__alias__` was replaced with "" (nothing)
  * `__key__` was replaced with "key1+key2"
  * `__misc__` was replaced with a random number (`__random-number__` is a reserved word that tells the OAS to generate a random number string and place it in that position
